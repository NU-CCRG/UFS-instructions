# UFS CCRG User Guide

**Author:** Jamie Berg (jamieberg2024@u.northwestern.edu)

## Introduction

### What is UFS?
The Unified Forecast System (UFS) is NOAA’s suite of Earth system models developed with a focus on operational meteorological forecasting. UFS consists of a standalone meteorological model that can be coupled with various components, including air quality models (GOCART and CMAQ), sea ice, land use, and wave models. The model is primarily for NOAA operational forecasts and research but is being adapted for community use, though many components are not easily adaptable for community systems (designated as Level 2-4 systems in NOAA documentation). UFS is divided into “applications,” including the general use weather model (UFS WM) and the short-range forecasting model (UFS SRW). Development and support for UFS is overseen by NOAA’s Earth Prediction Innovation Center (EPIC) division.

### What Modules Have Been Integrated into Quest?
- **UFS Weather Model**
  - Global atmospheric (ATM) model
  - C48 (200km) - C768 (13km) resolution

### What Modules Have We Attempted/Began to Build on Quest?
- **UFS Weather Model**
  - Regional ATM model
  - Regional ATM-CMAQ (ATMAQ) model
- **UFS SRW Application**

### Where is UFS Code/Support Available?
- [UFS GitHub](https://github.com/ufs-community/ufs-weather-model/tree/develop)

## Running the Model

### Where is the Model?
- `/projects/b1045/ufs-weather-model`

### Input Directory
- Currently: `/projects/b1045/jberg/data`
- Moved to: `/projects/b1045/ufs-weather-model/input_data`

### What Needs to Go in It?
- [UFS Weather Model GitHub](https://github.com/ufs-community/ufs-weather-model/tree/develop)
- NEMS*
- Test-specific boundary data

### Preparing Data
Pre-processed data is available at NOAA’s AWS data bucket, updated regularly to support runs for various historical periods. The data can be found [here](https://noaa-ufs-regtests-pds.s3.amazonaws.com/index.html).

### Run Directory
The run directory is designated as `/projects/b1045/ufs-weather-model/run/`. This is where output files are stored for each model run. Currently, output from two model runs is stored there: data from a C192 global met model run and data from a failed regional model run. If you are interested in setting up a regional model, this run directory is a good starting point as it contains information about the missing dependencies for the regional model in the err file.

### Test Selection
Selection for a range of pre-configured tests is done in the `/projects/b1045/ufs-weather-model/tests/` directory, with the file `my_rt.conf`. A reference of available tests can be found [here](https://github.com/ufs-community/ufs-weather-model/blob/develop/tests/rt.conf). Currently, the only tests available are global ATM tests.

### Test Modification
Test specifics are modified in `/projects/b1045/ufs-weather-model/tests/tests` directory. This directory contains files corresponding to each pre-configured test. For example, running the C192 test will evoke the `control_c192` file. The specifics of this test can be modified in that file. Additionally, other parameters can be modified directly in the `/projects/b1045/ufs-weather-model/tests/parm` directory. Modifying the `model_configure.IN` file allows for direct control over parameters such as forecast length.

### Job Submission Scripts
Scripts for modifying the slurm submission commands are contained in `/projects/b1045/ufs-weather-model/tests/fv3_conf`. For each model simulation, you will have to modify a compile submission script and a fv3 run submission script. The compile step is not very resource-intensive and should not vary significantly from test to test. The fv3 run step is highly variable, with low-resolution simulations requiring as few as 70 mpi tasks to run and high-resolution ones requiring hundreds.

### Running the Model
```bash
./rt.sh -c | -e | -h | -k | -w | -d | -l <file> | -m | -n <name> | -r
-c create new baseline results
-e use ecFlow workflow manager
-h display this help
-k keep run directory after rt.sh is completed
-l runs test specified in <file>
-m compare against new baseline results
-n run single test <name>
-r use Rocoto workflow manager
-w for weekly_test, skip comparing baseline results
-d delete run directories that are not used by other tests

I have run the model primarily using the “rt.sh” command. For example, following the conventions above `./rt.sh -a <user ID> -k -l my_rt.conf`.

#### Output

Simulation output lands in the designated run directory. Look for `/projects/b1045/ufs-weather-model/run/<user ID>/FV3_RT`.

#### Further Avenues:

- Regional ATM model
